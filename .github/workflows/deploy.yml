name: Deploy to Cloudflare

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers and Pages
    
    env:
      NODE_VERSION: '20'
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      # ... 其他 secrets

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # 1. [新修复] 先设置 pnpm，让它先配置好自己的环境
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # 2. [新修复] 在 pnpm 设置好之后，再全局安装 Wrangler
      # 这能确保 Wrangler 的路径在 PATH 中具有最高优先级
      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Install Frontend Dependencies
        run: pnpm install
        working-directory: ./frontend

      - name: Build Frontend
        run: pnpm run build
        working-directory: ./frontend

      - name: Install Backend Dependencies
        run: npm install
        working-directory: ./backend

      - name: Update wrangler.toml with Resource IDs
        id: update_ids
        working-directory: ./backend
        run: |
          # 现在直接调用 wrangler 应该会命中正确的全局版本
          echo "Fetching D1 Database ID..."
          D1_ID=$(wrangler d1 list --json | jq -r '.[] | select(.name=="sm-auth-survey-db") | .uuid')
          if [ -z "$D1_ID" ]; then
            echo "::error::D1 Database 'sm-auth-survey-db' not found."
            exit 1
          fi
          echo "D1_DATABASE_ID=$D1_ID" >> $GITHUB_OUTPUT

          echo "Fetching KV Namespace ID..."
          KV_ID=$(wrangler kv:namespace list --json | jq -r '.[] | select(.title=="sm-auth-survey-api-CACHE") | .id')
          if [ -z "$KV_ID" ]; then
            echo "::error::KV Namespace 'sm-auth-survey-api-CACHE' not found."
            exit 1
          fi
          echo "KV_NAMESPACE_ID=$KV_ID" >> $GITHUB_OUTPUT

          echo "Updating wrangler.toml..."
          sed -i "s/database_id = \".*\"/database_id = \"$D1_ID\"/" wrangler.toml
          sed -i "s/id = \".*\"/id = \"$KV_ID\"/" wrangler.toml
          sed -i "s/preview_id = \".*\"/preview_id = \"$KV_ID\"/" wrangler.toml
          
          echo "wrangler.toml updated successfully."
          cat wrangler.toml

      - name: Apply Database Migrations
        working-directory: ./backend
        run: |
          echo "Applying database migrations to remote D1..."
          wrangler d1 execute sm-auth-survey-db --remote --file=./migrations/0001_initial_schema.sql
          wrangler d1 execute sm-auth-survey-db --remote --file=./migrations/0002_initial_data.sql
          wrangler d1 execute sm-auth-survey-db --remote --file=./migrations/0003_email_templates_and_site_configs.sql

      - name: Deploy Worker (Backend)
        uses: cloudflare/wrangler-action@v3
        with:
          command: deploy
          workingDirectory: ./backend

      - name: Deploy Pages (Frontend)
        uses: cloudflare/pages-action@v1
        with:
          projectName: 'sm-auth-survey-frontend' # 替换为你的 Pages 项目名称
          directory: ./frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
