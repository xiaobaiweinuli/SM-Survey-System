name: Deploy to Cloudflare

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  WORKERS_DEV_URL: ${{ secrets.WORKERS_DEV_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers and Pages
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: |
          echo "--- Installing frontend dependencies ---"
          cd frontend && pnpm install && cd ..
          echo "--- Installing backend dependencies ---"
          cd backend && npm ci && cd ..

      # --- 资源创建 ---
      - name: Create D1 database
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 create sm-auth-survey-db
          wranglerVersion: '4.34.0' # 固定版本
        continue-on-error: true

      - name: Create KV namespace
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: kv:namespace create "CACHE"
          wranglerVersion: '4.34.0'
        continue-on-error: true

      - name: Create R2 bucket
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: r2 bucket create sm-auth-survey-files
          wranglerVersion: '4.34.0'
        continue-on-error: true

      # --- 动态更新 wrangler.toml ---
      - name: Update wrangler.toml with actual resource IDs
        id: update_toml
        run: |
          cd backend
          
          D1_ID=$(npx wrangler d1 list --json | jq -r '.[] | select(.name=="sm-auth-survey-db") | .uuid')
          # 确保 wrangler.toml 中的 worker name 是 "sm-auth-survey-api"
          KV_ID=$(npx wrangler kv namespace list | jq -r '.[] | select(.title=="sm-auth-survey-api-CACHE") | .id')
          
          echo "D1 Database ID: $D1_ID"
          echo "KV Namespace ID: $KV_ID"

          if [ -z "$D1_ID" ] || [ -z "$KV_ID" ]; then
            echo "Error: Failed to retrieve D1 or KV resource IDs."
            exit 1
          fi
          
          # 修复: 使用更精确的 sed 匹配，确保只替换正确的行
          # 通过在 key 前后添加空格或等号来限定范围
          sed -i 's/database_id = ".*"/database_id = "'"$D1_ID"'"/' wrangler.toml
          sed -i 's/ id = ".*"/ id = "'"$KV_ID"'"/' wrangler.toml
          sed -i 's/ preview_id = ".*"/ preview_id = "'"$KV_ID"'"/' wrangler.toml
          
          echo "--- wrangler.toml updated successfully ---"
          cat wrangler.toml

      # --- 数据库迁移 ---
      - name: Run Database Migrations
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: backend
          wranglerVersion: '4.34.0'
          command: d1 migrations apply sm-auth-survey-db --remote
        continue-on-error: true

      # --- 部署后端 ---
      - name: Deploy backend to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy -e production # 修复: 明确指定部署环境
          workingDirectory: backend
          wranglerVersion: '4.34.0'
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          # ... 其他 secrets
          
      # --- 部署前端 ---
      - name: Create Pages routing configuration
        run: |
          mkdir -p frontend/public
          cat > frontend/public/_routes.json << 'EOF'
          {
            "version": 1,
            "include": ["/api/*"],
            "exclude": []
          }
          EOF

      - name: Build frontend
        run: |
          cd frontend
          pnpm run build
        env:
          VITE_API_BASE_URL: "https://sm-auth-survey-api.${{ env.WORKERS_DEV_URL }}"

      - name: Deploy frontend to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: sm-auth-survey-frontend
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Output deployment info
        run: |
          echo "✅ Deployment process completed."
          echo "   - Frontend URL: https://sm-auth-survey-frontend.pages.dev"
          echo "   - Backend URL: https://sm-auth-survey-api.${{ env.WORKERS_DEV_URL }}"
