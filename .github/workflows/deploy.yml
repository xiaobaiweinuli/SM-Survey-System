name: Deploy to Cloudflare

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  # 将 secrets 作为顶级 env 变量，方便在多个步骤中引用
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  # 请在 GitHub Secrets 中设置 WORKERS_DEV_URL，例如 your-subdomain.workers.dev
  WORKERS_DEV_URL: ${{ secrets.WORKERS_DEV_URL }} 

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers and Pages
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: |
          echo "--- Installing frontend dependencies ---"
          cd frontend && pnpm install && cd ..
          echo "--- Installing backend dependencies ---"
          cd backend && npm ci && cd ..

      # --- 资源创建 (使用 continue-on-error) ---
      - name: Create Cloudflare Resources (D1, KV, R2)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          # 优化：在一个步骤中执行所有创建命令
          command: |
            d1 create sm-auth-survey-db || echo "D1 DB already exists."
            kv:namespace create "CACHE" || echo "KV Namespace already exists."
            r2 bucket create sm-auth-survey-files || echo "R2 Bucket already exists."
        continue-on-error: true

      # --- 动态更新 wrangler.toml ---
      - name: Update wrangler.toml with actual resource IDs
        id: update_toml
        run: |
          cd backend
          
          echo "Fetching D1 Database ID..."
          D1_ID=$(npx wrangler d1 list --json | jq -r '.[] | select(.name=="sm-auth-survey-db") | .uuid')
          echo "D1 Database ID: $D1_ID"
          
          echo "Fetching KV Namespace ID..."
          # 修复: 修正 wrangler kv namespace list 命令语法
          # 注意: Wrangler v3 会根据 worker 名称自动创建 KV，名称格式为 `[worker-name]-CACHE`
          # 请确保 wrangler.toml 中的 name = "sm-auth-survey-api"
          KV_ID=$(npx wrangler kv namespace list --json | jq -r '.[] | select(.title=="sm-auth-survey-api-CACHE") | .id')
          echo "KV Namespace ID: $KV_ID"
          
          if [ -z "$D1_ID" ] || [ -z "$KV_ID" ]; then
            echo "Error: Failed to retrieve D1 or KV resource IDs. Please check resource names and permissions."
            # 打印列表以供调试
            echo "--- Available D1 Databases ---"
            npx wrangler d1 list --json
            echo "--- Available KV Namespaces ---"
            npx wrangler kv namespace list --json
            exit 1
          fi
          
          # 使用更安全的 sed 替换，避免替换空字符串
          sed -i "s/database_id = \".*\"/database_id = \"$D1_ID\"/" wrangler.toml
          sed -i "s/id = \".*\"/id = \"$KV_ID\"/" wrangler.toml
          sed -i "s/preview_id = \".*\"/preview_id = \"$KV_ID\"/" wrangler.toml
          
          echo "--- wrangler.toml updated successfully ---"
          cat wrangler.toml

      # --- 数据库迁移 ---
      - name: Run database migrations on remote D1
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: backend
          # 修复: 确保所有迁移都在 --remote 上执行
          command: |
            d1 execute sm-auth-survey-db --remote --file=./migrations/0001_initial_schema.sql || echo "Schema migration may have already run."
            d1 execute sm-auth-survey-db --remote --file=./migrations/0002_initial_data.sql || echo "Initial data migration may have already run."
            d1 execute sm-auth-survey-db --remote --file=./migrations/0003_email_templates_and_site_configs.sql || echo "Email/Site config migration may have already run."
        continue-on-error: true

      # --- 部署后端 ---
      - name: Deploy backend to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: backend
        env:
          # 这些 secrets 会被自动注入到 Worker 中
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          FROM_NAME: ${{ secrets.FROM_NAME }}
          ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
          ADMIN_NAME: ${{ secrets.ADMIN_NAME }}
          ADMIN_ID_CARD: ${{ secrets.ADMIN_ID_CARD }}
          WECHAT_WEBHOOK_URL: ${{ secrets.WECHAT_WEBHOOK_URL }}

      # --- 部署前端 ---
      - name: Create Pages routing configuration
        run: |
          # 将 _routes.json 放在 public 目录，Vite 会自动将其复制到 dist
          mkdir -p frontend/public
          cat > frontend/public/_routes.json << 'EOF'
          {
            "version": 1,
            "include": ["/api/*"],
            "exclude": []
          }
          EOF

      - name: Build frontend
        run: |
          cd frontend
          pnpm run build
        env:
          # 确保前端应用知道后端的绝对 URL
          VITE_API_BASE_URL: "https://sm-auth-survey-api.${{ env.WORKERS_DEV_URL }}"

      - name: Deploy frontend to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: sm-auth-survey-frontend
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Output deployment info
        run: |
          echo "✅ Deployment process completed."
          echo "   - Frontend URL: https://sm-auth-survey-frontend.pages.dev"
          echo "   - Backend URL: https://sm-auth-survey-api.${{ env.WORKERS_DEV_URL }}"
