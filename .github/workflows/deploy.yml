name: Deploy to Cloudflare

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers and Pages
    
    env:
      NODE_VERSION: '20'
      # 指定一个确定的、最新的 Wrangler v4 版本以保证命令语法一致性
      WRANGLER_VERSION: '4.34.0' 
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install Frontend Dependencies
        run: pnpm install
        working-directory: ./frontend

      - name: Build Frontend
        run: pnpm run build
        working-directory: ./frontend

      - name: Install Backend Dependencies
        run: npm install
        working-directory: ./backend

      - name: Get D1 Database ID
        id: get_d1_id
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 list --json
          
      - name: Get KV Namespace ID
        id: get_kv_id
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # 使用 Wrangler v4 的正确语法
          command: kv namespace list --json

      - name: Update wrangler.toml with dynamic IDs
        working-directory: ./backend
        run: |
          echo "Parsing resource IDs..."
          D1_OUTPUT='${{ steps.get_d1_id.outputs.stdout }}'
          KV_OUTPUT='${{ steps.get_kv_id.outputs.stdout }}'

          D1_ID=$(echo "$D1_OUTPUT" | jq -r '.[] | select(.name=="sm-auth-survey-db") | .uuid')
          if [ -z "$D1_ID" ]; then
            echo "::error::D1 Database 'sm-auth-survey-db' not found."
            exit 1
          fi

          KV_ID=$(echo "$KV_OUTPUT" | jq -r '.[] | select(.title=="sm-auth-survey-api-CACHE") | .id')
          if [ -z "$KV_ID" ]; then
            echo "::error::KV Namespace 'sm-auth-survey-api-CACHE' not found."
            exit 1
          fi

          echo "Updating wrangler.toml..."
          sed -i "s/database_id = \".*\"/database_id = \"$D1_ID\"/" wrangler.toml
          sed -i "s/id = \".*\"/id = \"$KV_ID\"/" wrangler.toml
          sed -i "s/preview_id = \".*\"/preview_id = \"$KV_ID\"/" wrangler.toml
          
          echo "wrangler.toml updated successfully."
          cat wrangler.toml

      - name: Apply Database Migrations
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 execute sm-auth-survey-db --remote --file=./migrations/0001_initial_schema.sql
          workingDirectory: ./backend
      
      - name: Apply Initial Data
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 execute sm-auth-survey-db --remote --file=./migrations/0002_initial_data.sql
          workingDirectory: ./backend

      - name: Apply Email Templates
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 execute sm-auth-survey-db --remote --file=./migrations/0003_email_templates_and_site_configs.sql
          workingDirectory: ./backend

      - name: Deploy Worker (Backend)
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: ./backend

      - name: Deploy Pages (Frontend)
        uses: cloudflare/pages-action@v1
        with:
          projectName: 'sm-auth-survey-frontend' # 确保这是你正确的 Pages 项目名
          directory: ./frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
